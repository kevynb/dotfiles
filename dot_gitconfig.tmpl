######################################################
######################################################
### USE CHEZMOI TO EDIT THIS FILE
### chezmoi edit ~/.gitconfig
### chezmoi apply
######################################################
######################################################
######################################################



# https://jvns.ca/blog/2024/02/16/popular-git-config-options/

[user]
	name = Kevyn Bruyere
## This email is set using the variable set in ~/.config/chezmoi/chezmoi.toml
## To change it, update the value in the file above an run `chezmoi apply` one more time
	email = {{ .email | quote }}
[core]
	editor = emacs -nw
	excludesfile = ~/.gitignore_global
	autocrlf = input
	pager = delta
[includeIf "gitdir:~/git/bb2/"]
# This file is not managed by chezmoi
path = "~/git/bb2/.gitconfig"

[color]
  ui = auto

[alias]
  co = checkout
  ci = commit
  br = branch
  st = status
  a  = add
  pure = pull --rebase --stat --log
  # log with graph
  lg = log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%ci)%Creset %s %C(bold blue)<%an>%Creset%C(yellow)%d%Creset'
  # short log 
  l = log --pretty=format:'%Cred%h%Creset %Cgreen(%ci)%Creset %s %C(blue)<%an>%C(yellow)%d%Creset'
  # lga = lg --all | la = l --all
  lga = log --graph --pretty=format:'%Cred%h%Creset %Cgreen(%ci)%Creset %s %C(bold blue)<%an>%Creset%C(yellow)%d' --all
  #la = log --pretty=format:'%Cred%h%Creset %Cgreen(%ci)%C(yellow)%d%Creset %s %C(blue)<%an>%Creset' --abbrev-commit --all
  # log with diff
  ld = log --pretty=format:'%C(bold magenta)Commit:     %C(bold magenta)%H\n%C(bold blue)Author:     %an <%aE>\n%C(bold blue)AuthorDate: %ai (%ar)\n%C(bold blue)Commit:     %cn <%cE>\n%C(bold blue)CommitDate: %ci (%cr)\n%C(reset)Parent:     %P\nTree:       %T\n\n\t%C(ul bold red)%s\n%+b\n%Creset' -p

[hooks]
	showrev = "git show -C %s; echo"
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[push]
#These push.default options tell git push to automatically push the current branch to a remote branch with the same name.
#    push.default simple is the default in Git. It only works if your branch is already tracking a remote branch
#    push.default current is similar, but it’ll always push the local branch to a remote branch with the same name.
#Removes the need for a gpsup
	default = current
	followtags = true
[branch]
	autosetuprebase = always
[pull]
	rebase = preserve
[merge]
	conflictstyle = zdiff3
[rebase]
	autostash = true
# updateRefs: https://andrewlock.net/working-with-stacked-branches-in-git-is-easier-with-update-refs/
	updateRefs = true
[rerere]
# This enables rerere (”reuse recovered resolution”), which remembers how you resolved merge conflicts during a git rebase and automatically resolves conflicts for you when it can.
	enabled = true

[fetch]
	prune = true
	prunetags = true
	fsckobjects = true
[init]
	defaultBranch = main
[gpg]
	format = ssh
[help]
	autocorrect = 10

### Delta config ###
[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true    # use n and N to move between diff sections
    light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)

[diff]
    colorMoved = default
    algorithm = histogram
### /Delta config ###

# fsckobjects: avoid data corruption
[transfer]
	fsckobjects = true
[receive]
	fsckObjects = true
[url "git@gitlab.com:"]
       insteadOf = https://gitlab.com/