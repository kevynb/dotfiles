######################################################
######################################################
### USE CHEZMOI TO EDIT THIS FILE
### chezmoi edit ~/.zshrc
### chezmoi apply
######################################################
######################################################
######################################################


# Detect CPU architecture to run brew from the proper location
cpu_arch=$(arch)
if [[ $cpu_arch == "arm64" ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
else
    eval "$(/usr/local/bin/brew shellenv)"
fi

eval "$(starship init zsh)"
eval "$(fnm env --use-on-cd)"

ZSH_DISABLE_COMPFIX=true
PROFILING=${PROFILING:-false}
if $PROFILING; then
    zmodload zsh/zprof
fi

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export LANGUAGE=en_US.UTF-8

export LC_TIME="fr_FR.UTF-8"
export LC_MONETARY="fr_FR.UTF-8"
export LC_MEASUREMENT="fr_FR.UTF-8"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

#enable command auto-correction.
ENABLE_CORRECTION="true"

# Display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Ignore existing element on completion
zstyle ':completion:*:rm:*' ignore-line yes
zstyle ':completion:*:mv:*' ignore-line yes
zstyle ':completion:*:cp:*' ignore-line yes

# Create a completion cache
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh_cache

function is_osx() {
    [[ "$OSTYPE" =~ ^darwin ]] || return 1
}  

# export pour l'historique des commandes
export HISTSIZE=32768
export HISTFILESIZE=$HISTSIZE

export VISUAL="emacs"
export EDITOR="emacs"
export GIT_EDITOR="emacs"
export PAGER=less

export DEFAULT_USER=bruyer_k
export TERM=xterm-256color
export CLICOLOR=1

# If user is root it can have some issues with access to competition files
if [[ "${USER}" == "root" ]]; then
    ZGEN_AUTOLOAD_COMPINIT=false
fi

source "${HOME}/.zgenom/zgenom.zsh"
zgenom autoupdate

### Zgenom utility is what builds the shell settings.
### - It creates a cache of the config. use `zgenom reset` to clear eve
###

if ! zgenom saved; then

    # Add this if you experience issues with missing completions or errors mentioning compdef.
    zgenom compdef
    # zgenom will load oh-my-zsh and download it if required
    zgenom ohmyzsh

    # list of plugins from zsh I use
    # see https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins
    zgenom ohmyzsh plugins/git
    zgenom ohmyzsh plugins/npm
    zgenom ohmyzsh plugins/kubectl
    zgenom ohmyzsh plugins/sudo
    zgenom ohmyzsh plugins/man
 
    if [ ! is_osx ]; then
      zgenom ohmyzsh plugins/debian
    fi
    #zgenom ohmyzsh plugins/emacs
    zgenom ohmyzsh plugins/command-not-found
    zgenom ohmyzsh plugins/cp
    zgenom ohmyzsh plugins/mosh
    zgenom ohmyzsh plugins/history-substring-search
    
    # https://github.com/zsh-users/zsh-completions
    zgenom load zsh-users/zsh-completions src

    zgenom load zsh-users/zsh-syntax-highlighting

    if is_osx; then
	zgenom ohmyzsh plugins/brew
        zgenom ohmyzsh plugins/macos
    fi
    
    zgenom save

    zgenom compile "$HOME/.zshrc"
fi

# User configuration

alias emacs='emacs -nw'
alias ne='emacs'
alias more='less'

if command -v procs &> /dev/null
then
    alias old_ps=`which ps`
    alias ps="procs -c always --tree"
fi

if command -v eza &> /dev/null
then
    # Remove potential custom config around ls
    unalias ls
    alias old_ls=`which ls`
    alias ls="eza"
    alias ll="ls -al"
    alias la="ls -a -a"
else
    # Always use color output for `ls`
    if is_osx; then
	alias ls="command ls -G"
    else
	alias ls="command ls --color"
	export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga\
=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
    fi

    # Directory listing
    if (( $+commands[tree] )); then
	alias ll='tree --dirsfirst -aLpughDFiC 1'
	alias lsd='ll -d'
    else
	alias ll='ls -al'
	alias lsd='CLICOLOR_FORCE=1 ll | grep --color=never "^d"'
    fi
fi

if command -v rg &> /dev/null
then
    # Remove potential custom config around grep
    unalias grep
    alias old_grep=`which grep`
    alias grep="rg"
else
    alias grep="grep --color=auto --exclude-dir '.svn' --exclude-dir '.git'"        
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

if command -v dust &> /dev/null
then
    alias old_du=`which du`
    alias du="dust"
else
    alias du='du -kh'    # Makes a more readable output.
fi

if command -v bat &> /dev/null
then
    alias old_cat=`which cat`
    alias cat="bat"
fi

if command -v gping &> /dev/null
then
    alias old_ping=`which ping`
    alias ping="gping"
fi

if command -v fnm &> /dev/null
then
    alias old_nvm=`which nvm`
    alias nvm="fnm"
fi

alias nslookup='nslookup -sil'
alias tf='tail -f'

alias zshrc="chezmoi edit ~/.zshrc"
alias h="history"
alias j="jobs"

#Others
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
# -> Prevents accidentally clobbering files.


# File size
alias fs="stat -f '%z bytes'"
alias df="df -kTh"

# IP addresses
alias wanip="dig +short myip.opendns.com @resolver1.opendns.com"
alias whois="whois"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache"

# View HTTP traffic
alias httpdump="sudo tcpdump -i en1 -n -s 0 -w - | grep -a -o -E \"Host\: .*|GET \/.*\""

function tmosh() {
  mosh $1 -- tmux a
}


# specific for machine configuration, which I don't sync
if [ -f ~/.machinerc ]; then
    source ~/.machinerc
fi

# additional configuration for zsh
# Remove the history (fc -l) command from the history list when invoked.
setopt histnostore
# Remove superfluous blanks from each command line being added to the history list.
setopt histreduceblanks

# if profiling was on
if $PROFILING; then
    zprof
fi

#Edit env variables => vared VAR
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"


